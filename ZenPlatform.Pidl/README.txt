PIDL  (Platform Interface Definition Language)
Язык для описания интерфейса пользователя для платформы

Было столкновениие с тем, что у нас есть, допустим следующая структура
<form xmlns:table="TableExtension"
        DataType="Document.ПриходнаяНакладная">
    
    <!-- Для фрагмента важно указать тип -->
    <fragment Id="1" DataType="Document.ПриходнаяНакладная">
        Здесь описание компонента
    </fragment>

    <!-- Помимо локальных фрагментов есть ещё глобальные фрагменты -->

    <group>
        <!--Где Height - это количество строк, которые умещаются в поле в высоту Width - количество символов-->
        <field Source="Комментарий" Height="1" Width="200" />

        <!--
        Если установлен флаг AddvancedMode, в таком случае: Height - высота в пикселях,  Width - ширина в пикселях
        
        Также доступны отступы - Margins
        
        Какие ещё функции должны быть доступны в advanced mode и может быть он должен быть сразу выставлен на форму
        -->
        <field Source="Текст1" AdvancedMode="true" Height="25" Width="200" Margin="0,10,23,10"
            Padding="10,10,10,10" />

        <!--Автоматически будет сгенерирована таблица -->
        <field Source="Товары">
            <!-- Расширение свойства. Для каждого типа есть Своё расширение отображения. Например можно устанавливать видимые столбцы -->
            <table:extension>
                <columns>
                    <column Source="Колонка1" />
                    <column Source="Колонка2" />
                    <column Source="Колонка3" />
                </columns>
            </table:extension>
        </field>

        <!--Автоматически будет сгенерировано поле даты и времени -->
        <field Source="ДатаДокумента" Enable="true" />
    </group>

    <fragment_ref Id="1" /> <!-- А вот тут мы подключаем компоненет-->

    <fragment_ref Id="1" /> <!-- Мы можем ссылаться на 1 и тот же фрагмент сколько угодно раз-->
</form>

У нас есть такая вот с виду непримечательная директива, которая регистрируется динамически, с подключаемым компонентом