<Root>
  <ProjectId>d483d0a1-1764-4e8c-8cbb-ddb5646cf34f</ProjectId>
  <ProjectName>Управление библиотекой</ProjectName>
  <!-- RC, RTM, Alpha, Beta, Gamma  -->
  <ProjectVersion>0.0.0.1 Alpha</ProjectVersion>
  <!-- Секция данных -->
  <Data>
    <!-- Секция компонентов -->
    <Components>
      <!-- Каждый компонент объявляется отдельно -->
      <!-- Где Id - уникальный идентификатор компонента, если компонент реализует аттрибут
                        [assembly: Guid(SomeGuid)]
                        Тогда идентификатор будет взят оттуда, чтобы можно было легко догадаться по разным конфигурациям, какой компонент подключен
                        Если нет аттрибута, берём просто - Guid.NewGuid();
                         -->
      <Component>
        <Blob Name="Aquila.EntityComponent.dll"/>

        <!--Присоединённые компоненты. Например, табличная часть. Для неё будут дополнительно обрабатываться генерация свойств в обе стороны-->
        <!--<Attaches>
          <ComponentId>SomeGuid</ComponentId>
        </Attaches>-->
        <!-- Включенные файлы. Дериктива указывает на файлы, которые прекреплены к проекту -->
        <Include>
          <Blob Path="TestEntity.xml"/>
        </Include>
      </Component>
    </Components>
  </Data>

  <!-- Секция описания интерфейса -->
  <Interface>
    <Include>
      <Blob Path="РабочийСтол.xml"/>
    </Include>
  </Interface>

  <!-- Секция описания ролей -->
  <!--<Roles>
      <IncludedFiles>
        <File Path="./Roles/Директор.xml" />
      </IncludedFiles>
    </Roles>-->

  <!-- Секция модулей
        Ремарка все подключаемые модули и весь код распространяется контейнезированно, т.е.
        код упакован в структурированный xml файл. Это сделано для того, чтобы абстрагироваться от ЯП
        Наверно, в будующем C# будет заменён на какой-то диалект, который будет крутиться на CLR и обеспечивать
        взаимодействие с данными
        
        Модуль точно будет на собсвенном языке. Это нечто между c# и sql с богатыми возможностями
        извлечения, трансформации изменения сохранения данных. Пока что мобудь будет на C#
        -->
  <Modules>
    <Include>
      <Blob Name="Модуль1.cs"/>
    </Include>
  </Modules>

  <!-- Секиция расписания -->
  <Schedules>
  </Schedules>

  <!-- Секция языковой поддержки -->
  <Languages>
    <Language Name="Русский" Alias="ru"/>
    <Language Name="English" Alias="en"/>
  </Languages>
</Root>