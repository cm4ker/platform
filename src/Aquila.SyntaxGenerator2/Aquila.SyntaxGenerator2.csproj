<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Platforms>AnyCPU</Platforms>
    <OutputType Condition="'$(TargetFramework)' != 'netstandard2.0'">Exe</OutputType>
    <AutoGenerateBindingRedirects>True</AutoGenerateBindingRedirects>
    <TargetFrameworks>net5.0;netstandard2.0</TargetFrameworks>
    <IsShipping>false</IsShipping>
    <ExcludeFromSourceBuild>false</ExcludeFromSourceBuild>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>
  <ItemGroup>
    <!-- Make sure to reference the same version of Microsoft.CodeAnalysis.Analyzers as the rest of the build -->
<!--    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3" PrivateAssets="all" />-->
    <PackageReference Include="Aquila.Microsoft.CodeAnalysis" Version="4.1.0-dev" />
  </ItemGroup>
  <ItemGroup>
    <!-- If we're building the command line tool, we have to include some dependencies used for grammar generation -->
<!--    <Compile Include="..\..\..\Aquila.Microsoft.CodeAnalysis\src\Compilers\Core\Portable\Symbols\WellKnownMemberNames.cs" Link="Grammar\WellKnownMemberNames.cs" Condition="'$(TargetFramework)' != 'netstandard2.0'" />-->
    <Compile Include="..\Aquila.CodeAnalysis\Declarations\DeclarationModifiers.cs" Link="Grammar\DeclarationModifiers.cs" Condition="'$(TargetFramework)' != 'netstandard2.0'" />
    <Compile Include="..\Aquila.CodeAnalysis\Syntax\SyntaxKind.cs" Link="Grammar\SyntaxKind.cs" Condition="'$(TargetFramework)' != 'netstandard2.0'" />
    <Compile Include="..\Aquila.CodeAnalysis\Syntax\SyntaxKindFacts.cs" Link="Grammar\SyntaxKindFacts.cs" Condition="'$(TargetFramework)' != 'netstandard2.0'" />
  </ItemGroup>
</Project>